#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title

\noun on
02614 High-Performance Computing
\end_layout

\begin_layout Author

\noun on
Assignment 1: Matrix Multiplication
\end_layout

\begin_layout Date
Due 6th of January 2012
\end_layout

\begin_layout Section
Summary
\end_layout

\begin_layout Standard
In this report we will implement three different matrix-matrix multiplication
 functions and evaluate the performance of the functions.
 The functions use different algorithms for multiplying the two matrices.
\end_layout

\begin_layout Section
Statement of problem
\end_layout

\begin_layout Standard
We are to implement and evaluate three different matrix-matrix multiplication
 function used in a High-Performance Computing system.
 The three different implementations are:
\end_layout

\begin_layout Enumerate
A simple matrix multiplication function, with three nested loops.
\end_layout

\begin_layout Enumerate
Invoking the DGEMM function from the sun performance library.
\end_layout

\begin_layout Enumerate
A blocked matrix multiplication function, with the block size adjusted for
 the processor characteristics.
\end_layout

\begin_layout Standard
Evaluation of the functions??
\end_layout

\begin_layout Standard
(which will then be found in appropriate sections).
\end_layout

\begin_layout Section
Description of hardware and software
\end_layout

\begin_layout Standard
The machines we have tested our functions on, are the 
\noun on
gbar
\noun default
 linux servers, with 
\noun on
amd
\noun default
 or 
\noun on
intel
\noun default
 processors.
 The gbar has two different linux HPC servers.
\end_layout

\begin_layout Standard
For the DGEMM function we have used the SUN performance library.
\end_layout

\begin_layout Standard
Describe clearly what hardware and software are used and identify what is
 important to the present study.
\end_layout

\begin_layout Section
Description of theory
\end_layout

\begin_layout Standard
Which choices have been made?
\end_layout

\begin_layout Standard
What is used to verify correctness of the implemented code? Etc.
\end_layout

\begin_layout Section
Description of algorithm
\end_layout

\begin_layout Standard
The simple matrix multiplication function has three nested loops for 
\end_layout

\begin_layout Standard
In how many ways can the loops of the naive algorithm be nested?
\end_layout

\begin_layout Standard
Which algorithm are you trying to implement? How have you verified your
 implemented program is doing the right thing? Describe.
\end_layout

\begin_layout Section
Results
\end_layout

\begin_layout Standard
Always using suncc as compiler
\end_layout

\begin_layout Subsection*
Machines Used
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Machines 
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="6">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
OS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Arch
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
# of CPUs
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
L2 Cache
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Clock
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n-62-24-9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Linux 2.6.32
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x86_64
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
24
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
512kb
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.9 GHz
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Cache misses
\end_layout

\begin_layout Standard
Matrix sizes: 23437 for 5 iterations
\end_layout

\begin_layout Itemize
Simple:
\end_layout

\begin_deeper
\begin_layout Itemize
Time: 4.735780
\end_layout

\begin_layout Itemize
L1 D-Cache misses: 2 603 007 836
\end_layout

\begin_layout Itemize
L2 D-Cache misses: 632 119 002
\end_layout

\end_deeper
\begin_layout Itemize
Dgemm:
\end_layout

\begin_deeper
\begin_layout Itemize
Time: 0.292122 
\end_layout

\begin_layout Itemize
L1 D-Cache misses: 90 000 005
\end_layout

\begin_layout Itemize
L2 D-Cache misses: 7 100 193
\end_layout

\end_deeper
\begin_layout Subsection*
Speed
\end_layout

\begin_layout Standard
Matrix sizes: variable from 100*1..
 100*10 (for m, n and k) and 5 iterations for each size
\end_layout

\begin_layout Itemize
Simple
\end_layout

\begin_deeper
\begin_layout Itemize
FP adds total: 11 339 988 599
\end_layout

\begin_layout Itemize
FP muls total: 11 419 988 547
\end_layout

\end_deeper
\begin_layout Itemize
Dgemm
\end_layout

\begin_deeper
\begin_layout Itemize
FP adds total: 5 439 996 293
\end_layout

\begin_layout Itemize
FP muls total: 5 459 996 252
\end_layout

\end_deeper
\begin_layout Itemize
Output (total matrix size | simple_mm time in sec | dgemm_mm time in sec)
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

234 0.003333 0.000667  
\end_layout

\begin_layout Plain Layout

937 0.017997 0.002666 
\end_layout

\begin_layout Plain Layout

2109 0.072489 0.009165  
\end_layout

\begin_layout Plain Layout

3750 0.231298 0.020664  
\end_layout

\begin_layout Plain Layout

5859 0.467096 0.042327  
\end_layout

\begin_layout Plain Layout

8437 1.445114 0.067490  
\end_layout

\begin_layout Plain Layout

11484 1.103166 0.107484  
\end_layout

\begin_layout Plain Layout

15000 3.542295 0.161475  
\end_layout

\begin_layout Plain Layout

18984 3.318995 0.224966  
\end_layout

\begin_layout Plain Layout

23437 4.272018 0.308952
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Total simple: 14.4738 sec
\end_layout

\begin_layout Itemize
Total dgemm: 0.945856 sec
\end_layout

\end_deeper
\begin_layout Itemize
Simple
\end_layout

\begin_deeper
\begin_layout Itemize
Total FLOP: 22 759 977 146
\end_layout

\begin_layout Itemize
FLOP/s: 314 498 986
\end_layout

\end_deeper
\begin_layout Itemize
Dgemm
\end_layout

\begin_deeper
\begin_layout Itemize
Total FLOPS: 10 899 992 545
\end_layout

\begin_layout Itemize
FLOP/s: 2 304 789 004
\end_layout

\end_deeper
\begin_layout Subsection
Naive matrix mult
\end_layout

\begin_layout Subsection
Dgemm
\end_layout

\begin_layout Subsection
Blocked matrix mult
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Present the important and relevant results of your computations and investigatio
ns.
 Use tables and graphs and fill these with data that are interesting.
 For example, you might want to analyze the timing results of your algorithms
 by providing graphs of the rate of execution (operations/sec) as you vary
 the size of the problem.
 You might also want to analyze the rate you achieve compare do the theoretical
 peak performance rate of the processor to indicate how good the performance
 is.
 Make sure to discuss and interpret your results.
 How do they relate to your expectations? Can we do better? Etc.
 Comment on things that are obviously peculiar.
\end_layout

\end_inset


\end_layout

\begin_layout Section
Conclusions
\end_layout

\begin_layout Standard
We have ...
\end_layout

\begin_layout Bibliography
\labelwidthstring References
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-2"

\end_inset


\end_layout

\begin_layout Section*
Appendix
\end_layout

\end_body
\end_document
