#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title

\noun on
02614 High-Performance Computing
\end_layout

\begin_layout Author

\noun on
Assignment 1: Matrix Multiplication
\end_layout

\begin_layout Date
Due 6th of January 2012
\end_layout

\begin_layout Section
Summary
\begin_inset Marginal
status open

\begin_layout Plain Layout
Rasmus
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In this report we will implement three different matrix-matrix multiplication
 functions and evaluate the performance of the functions.
 The functions use different algorithms for multiplying the two matrices.
\end_layout

\begin_layout Section
Introduction
\begin_inset Marginal
status open

\begin_layout Plain Layout
Rasmus
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Matrix multiplication, why is it an important benchmark?
\end_layout

\begin_layout Standard
Many physical problems can be reduced to systems of linear equations, thus
 solved by linear algebra.
 Matrix multiplications are very calculation intensive and are their for
 the subject to many benchmarks for High performance computers.
\end_layout

\begin_layout Standard
We are to implement and evaluate three different matrix-matrix multiplication
 function used in a High-Performance Computing system.
 The three different implementations are:
\end_layout

\begin_layout Enumerate
A simple matrix multiplication function, with three nested loops.
\end_layout

\begin_layout Enumerate
Invoking the DGEMM function from the sun performance library.
\end_layout

\begin_layout Enumerate
A blocked matrix multiplication function, with the block size adjusted for
 the processor characteristics.
\end_layout

\begin_layout Standard
The functions are evaluated by MFLOP/s to give an idea of the efficiency.
\end_layout

\begin_layout Section
Theory
\end_layout

\begin_layout Subsection
Matrix multiplication
\begin_inset Marginal
status open

\begin_layout Plain Layout
Rasmus
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Multiplying two matrices 
\begin_inset Formula $C=A\times B$
\end_inset

 can be done by the following simple algorithm: 
\end_layout

\begin_layout Standard
\begin_inset Formula $C_{ij}=\sum_{k=1}^{p}A_{ik}\cdot B_{kj}$
\end_inset


\end_layout

\begin_layout Standard
Which choices have been made?
\end_layout

\begin_layout Standard
What is used to verify correctness of the implemented code? Etc.
\end_layout

\begin_layout Subsection
Simple_mm
\begin_inset Marginal
status open

\begin_layout Plain Layout
Rasmus
\end_layout

\end_inset


\end_layout

\begin_layout Standard
naive
\end_layout

\begin_layout Standard
benchmark for improvements
\end_layout

\begin_layout Standard
direct translation of math algorithm
\end_layout

\begin_layout Subsection
Block_mm
\begin_inset Marginal
status open

\begin_layout Plain Layout
Evangelia
\end_layout

\end_inset


\end_layout

\begin_layout Standard
faster by taking data locality into account
\end_layout

\begin_layout Standard
best block size
\end_layout

\begin_layout Subsection
DGEMM_mm
\begin_inset Marginal
status open

\begin_layout Plain Layout
Rasmus
\end_layout

\end_inset


\end_layout

\begin_layout Standard
less Flop in total compared to the naive version
\end_layout

\begin_layout Standard
cache efficiency
\end_layout

\begin_layout Standard
fortran trick
\end_layout

\begin_layout Section
Experimental setup
\begin_inset Marginal
status open

\begin_layout Plain Layout
Henning
\end_layout

\end_inset


\end_layout

\begin_layout Standard
We have used the Sun studio collect tool to generate our results.
 The collect tool allows us to get a summary of time spent in each function
 without the need for modifications to the program, enabling us to get fairly
 good performance measures.
 Additionally the tool allows us to query the hardware performance counters
 of the CPU to obtain supplemental performance data.
 We have used this facility to query the 
\begin_inset Quotes eld
\end_inset

fp_ops
\begin_inset Quotes erd
\end_inset

 (total floating point operations) and the data cache misses counters.
\end_layout

\begin_layout Standard
The matrix multiplication subroutines must run for a couple of seconds to
 allow 
\emph on
collect
\emph default
 to query the program and get the measurements.
 For this purpose we have created loops around the matrix calculation functions
 in our program that achieve a runtime of at least three seconds for each
 of the three algorithms.
 The number of times the algorithms runs may vary, but by normalizing the
 performance counters with the actual time spent we can generate comparable
 results.
 As a positive side effect this will give us an average for all data generated
 of our functions.
\end_layout

\begin_layout Standard
Our main program several parameters as input, allowing us to control the
 size of the matrices and the block size used by the block matrix-multiply
 algorithm.
 This allowed us to write a wrapper script that varies the size of the matrices
 generated, making it easy to generate many measurements.
 
\emph on
Collect
\emph default
 will generate files binary files that can be accessed by 
\emph on
er_print
\emph default
 and further manipulation by bash scripts, awk and gnuplot allows us to
 fully automatically generate performance graphs, which are presented in
 the following sections.
\end_layout

\begin_layout Section
Machine description
\begin_inset Marginal
status open

\begin_layout Plain Layout
Evangelia
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Always using suncc as compiler
\end_layout

\begin_layout Standard
compiler version
\begin_inset Marginal
status open

\begin_layout Plain Layout
Evangelia
\end_layout

\end_inset


\end_layout

\begin_layout Standard
machine descriptions
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Machines 
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="6">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
OS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Arch
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
# of CPUs
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
L2 Cache
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Clock
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n-62-24-9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Linux 2.6.32
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x86_64
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
24
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
512kb
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.9 GHz
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Compilers
\end_layout

\begin_layout Standard
Flags
\begin_inset Marginal
status open

\begin_layout Plain Layout
Henning
\end_layout

\end_inset


\end_layout

\begin_layout Standard
xrestrict
\begin_inset Marginal
status open

\begin_layout Plain Layout
Henning
\end_layout

\end_inset


\end_layout

\begin_layout Section
Results
\end_layout

\begin_layout Standard
block_mm block size
\begin_inset Marginal
status open

\begin_layout Plain Layout
Evangelia
\end_layout

\end_inset


\end_layout

\begin_layout Standard
loop order simple and blocked
\begin_inset Marginal
status open

\begin_layout Plain Layout
Henning
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename graph_flops.eps

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename graph_cache.eps

\end_inset


\end_layout

\begin_layout Section
Conclusions
\end_layout

\begin_layout Standard
We have ...
\end_layout

\begin_layout Bibliography
\labelwidthstring References
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-2"

\end_inset


\end_layout

\begin_layout Section*
Appendix
\end_layout

\end_body
\end_document
